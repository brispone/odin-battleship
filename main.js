(()=>{"use strict";const e=function(){const e=()=>({ship:null,status:"empty"});return{board:Array.from({length:10},(()=>Array.from({length:10},e))),placeShip:function(e,t,r,i){const s=function(e){let t;switch(e){case"carrier":t=5;break;case"battleship":t=4;break;case"destroyer":case"submarine":t=3;break;case"patrol boat":t=2;break;default:return}return{type:e,length:t,hits:0,hit:function(){this.hits++,console.log(`This ship has been hit ${this.hits} times`)},isSunk:function(){return this.hits>=this.length}}}(e);let n=t,a=r;if(function(e,t,r,i,s){let n=t,a=r;for(let t=0;t<i;t++){if(e[n][a].ship)return!1;"vertical"==s?n++:a++}return!0}(this.board,n,a,s.length,i))for(let e=0;e<s.length;e++)this.board[n][a].ship=s,"vertical"==i?n++:a++;else console.log("There's already a ship here!")},recieveAttack:function(e,t){const r=this.board[e][t].ship;r?r.hit():console.log("Missed!")}}}();e.placeShip("destroyer",0,0,"horizontal"),e.recieveAttack(0,0),e.recieveAttack(0,1),e.recieveAttack(0,2),e.recieveAttack(0,3)})();