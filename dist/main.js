(()=>{"use strict";function t(){const t=()=>({ship:null,status:"empty"});return{board:Array.from({length:10},(()=>Array.from({length:10},t))),ships:[],placeShip:function(t,e,s,i){const r=function(t){let e;switch(t){case"carrier":e=5;break;case"battleship":e=4;break;case"destroyer":case"submarine":e=3;break;case"patrol boat":e=2;break;default:return}return{type:t,length:e,hits:0,hit:function(){this.hits++,console.log(`This ship has been hit ${this.hits} times`)},isSunk:function(){return this.hits>=this.length}}}(t);let a=e,h=s;if(this.checkCells(a,h,r.length,i)){for(let t=0;t<r.length;t++)this.board[a][h].ship=r,"vertical"==i?a++:h++;this.ships.push(r)}else console.log("There's already a ship here!")},recieveAttack:function(t,e){const s=this.board[t][e].ship;s?(s.hit(),this.board[t][e].status="hit"):(console.log("Missed!"),this.board[t][e].status="miss")},allSunk:function(){return this.ships.every((t=>t.isSunk()))},checkCells:function(t,e,s,i){let r=t,a=e;for(let t=0;t<s;t++){if(this.board[r][a].ship)return!1;"vertical"==i?r++:a++}return!0}}}const e={gameboard:t()};t(),e.gameboard.placeShip("patrol boat",0,0,"horizontal"),e.gameboard.placeShip("patrol boat",0,0,"horizontal")})();